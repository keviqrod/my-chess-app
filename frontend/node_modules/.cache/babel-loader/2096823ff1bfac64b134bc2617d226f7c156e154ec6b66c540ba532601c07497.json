{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paint\\\\Desktop\\\\Chess Game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\n// Import the Chess class from chess.js for game logic.\nimport { Chess } from 'chess.js';\n// Import our Chessboard component.\nimport Chessboard from './components/Chessboard';\nimport './index.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize a new chess game using chess.js.\n  const [game, setGame] = useState(new Chess());\n  // Use the FEN string from chess.js to represent the board position.\n  const [position, setPosition] = useState(game.fen());\n  // State to track whether a game has started.\n  const [gameStarted, setGameStarted] = useState(false);\n  // State for showing messages like \"Checkmate!\".\n  const [message, setMessage] = useState('');\n\n  // Function to start a new game.\n  const startGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setPosition(newGame.fen());\n    setGameStarted(true);\n    setMessage('');\n  };\n\n  // Handle a piece drop on the board.\n  // This function gets called with the source and target squares (e.g., \"e2\" and \"e4\").\n  const handleDrop = useCallback((sourceSquare, targetSquare) => {\n    // Try to make a move. We always promote to a queen for simplicity.\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: 'q'\n    });\n\n    // If move is illegal, return false to cancel the drop.\n    if (move === null) return false;\n\n    // Update the board position.\n    setPosition(game.fen());\n\n    // Check for game-over conditions.\n    if (game.game_over()) {\n      if (game.in_checkmate()) {\n        setMessage(\"Checkmate! Game over.\");\n      } else if (game.in_draw()) {\n        setMessage(\"Draw! Game over.\");\n      } else {\n        setMessage(\"Game over.\");\n      }\n    }\n    // Return true to indicate the move was accepted.\n    return true;\n  }, [game]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Chess App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), !gameStarted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Chessboard, {\n        position: position,\n        onDrop: handleDrop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kaQx/KvjxbzhvDAMbvo1AO1hIaU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Chess","Chessboard","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","game","setGame","position","setPosition","fen","gameStarted","setGameStarted","message","setMessage","startGame","newGame","handleDrop","sourceSquare","targetSquare","move","from","to","promotion","game_over","in_checkmate","in_draw","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDrop","_c","$RefreshReg$"],"sources":["C:/Users/paint/Desktop/Chess Game/frontend/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\n// Import the Chess class from chess.js for game logic.\r\nimport { Chess } from 'chess.js';\r\n// Import our Chessboard component.\r\nimport Chessboard from './components/Chessboard';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  // Initialize a new chess game using chess.js.\r\n  const [game, setGame] = useState(new Chess());\r\n  // Use the FEN string from chess.js to represent the board position.\r\n  const [position, setPosition] = useState(game.fen());\r\n  // State to track whether a game has started.\r\n  const [gameStarted, setGameStarted] = useState(false);\r\n  // State for showing messages like \"Checkmate!\".\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Function to start a new game.\r\n  const startGame = () => {\r\n    const newGame = new Chess();\r\n    setGame(newGame);\r\n    setPosition(newGame.fen());\r\n    setGameStarted(true);\r\n    setMessage('');\r\n  };\r\n\r\n  // Handle a piece drop on the board.\r\n  // This function gets called with the source and target squares (e.g., \"e2\" and \"e4\").\r\n  const handleDrop = useCallback((sourceSquare, targetSquare) => {\r\n    // Try to make a move. We always promote to a queen for simplicity.\r\n    const move = game.move({\r\n      from: sourceSquare,\r\n      to: targetSquare,\r\n      promotion: 'q'\r\n    });\r\n\r\n    // If move is illegal, return false to cancel the drop.\r\n    if (move === null) return false;\r\n\r\n    // Update the board position.\r\n    setPosition(game.fen());\r\n\r\n    // Check for game-over conditions.\r\n    if (game.game_over()) {\r\n      if (game.in_checkmate()) {\r\n        setMessage(\"Checkmate! Game over.\");\r\n      } else if (game.in_draw()) {\r\n        setMessage(\"Draw! Game over.\");\r\n      } else {\r\n        setMessage(\"Game over.\");\r\n      }\r\n    }\r\n    // Return true to indicate the move was accepted.\r\n    return true;\r\n  }, [game]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Simple Chess App</h1>\r\n      {/* If the game hasn't started, show a start button */}\r\n      {!gameStarted ? (\r\n        <button onClick={startGame}>Start New Game</button>\r\n      ) : (\r\n        <>\r\n          {/* Render the chessboard with the current position and move handler */}\r\n          <Chessboard position={position} onDrop={handleDrop} />\r\n          {/* Show any game messages (e.g., game over notifications) */}\r\n          {message && <p>{message}</p>}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}