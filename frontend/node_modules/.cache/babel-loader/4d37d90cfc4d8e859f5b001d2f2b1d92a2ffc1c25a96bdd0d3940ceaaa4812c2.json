{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paint\\\\Desktop\\\\Chess Game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Chess } from 'chess.js'; // Named export; your version of chess.js uses this style.\nimport Chessboard from './components/Chessboard';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize a new Chess instance.\n  const [game, setGame] = useState(new Chess());\n  // The board position (FEN string) used by the Chessboard.\n  const [position, setPosition] = useState(game.fen());\n  // Message to display game status (e.g., checkmate or draw).\n  const [message, setMessage] = useState('');\n\n  // Handler for when a piece is dropped.\n  const handleDrop = useCallback((sourceSquare, targetSquare) => {\n    // Check if there's a piece at the source square and if it belongs to the current turn.\n    const piece = game.get(sourceSquare);\n    if (!piece) {\n      console.error(\"No piece at the source square:\", sourceSquare);\n      return false;\n    }\n    if (piece.color !== game.turn()) {\n      console.error(\"It's not your turn. Current turn:\", game.turn());\n      return false;\n    }\n    try {\n      // Attempt to make the move.\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q' // Always promote to queen for simplicity.\n      });\n\n      // If the move is illegal, move will be null.\n      if (move === null) return false;\n\n      // Update the board's FEN string.\n      setPosition(game.fen());\n\n      // Check if the game is over using the correct methods.\n      if (game.isGameOver()) {\n        if (game.isCheckmate()) {\n          setMessage(\"Checkmate! Game over.\");\n        } else if (game.isDraw()) {\n          setMessage(\"Draw! Game over.\");\n        } else {\n          setMessage(\"Game over.\");\n        }\n      } else {\n        setMessage('');\n      }\n      return true;\n    } catch (error) {\n      console.error(\"Invalid move caught:\", error);\n      return false;\n    }\n  }, [game]);\n\n  // Function to start a new game.\n  const startNewGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setPosition(newGame.fen());\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Chess App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: position,\n      onDrop: handleDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, this), game.isGameOver() && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startNewGame,\n      children: \"Start New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UBxV+imCYH+Pnlu3B811Duh4ovQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Chess","Chessboard","jsxDEV","_jsxDEV","App","_s","game","setGame","position","setPosition","fen","message","setMessage","handleDrop","sourceSquare","targetSquare","piece","get","console","error","color","turn","move","from","to","promotion","isGameOver","isCheckmate","isDraw","startNewGame","newGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/paint/Desktop/Chess Game/frontend/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Chess } from 'chess.js'; // Named export; your version of chess.js uses this style.\r\nimport Chessboard from './components/Chessboard';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  // Initialize a new Chess instance.\r\n  const [game, setGame] = useState(new Chess());\r\n  // The board position (FEN string) used by the Chessboard.\r\n  const [position, setPosition] = useState(game.fen());\r\n  // Message to display game status (e.g., checkmate or draw).\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Handler for when a piece is dropped.\r\n  const handleDrop = useCallback((sourceSquare, targetSquare) => {\r\n    // Check if there's a piece at the source square and if it belongs to the current turn.\r\n    const piece = game.get(sourceSquare);\r\n    if (!piece) {\r\n      console.error(\"No piece at the source square:\", sourceSquare);\r\n      return false;\r\n    }\r\n    if (piece.color !== game.turn()) {\r\n      console.error(\"It's not your turn. Current turn:\", game.turn());\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      // Attempt to make the move.\r\n      const move = game.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: 'q'  // Always promote to queen for simplicity.\r\n      });\r\n\r\n      // If the move is illegal, move will be null.\r\n      if (move === null) return false;\r\n\r\n      // Update the board's FEN string.\r\n      setPosition(game.fen());\r\n\r\n      // Check if the game is over using the correct methods.\r\n      if (game.isGameOver()) {\r\n        if (game.isCheckmate()) {\r\n          setMessage(\"Checkmate! Game over.\");\r\n        } else if (game.isDraw()) {\r\n          setMessage(\"Draw! Game over.\");\r\n        } else {\r\n          setMessage(\"Game over.\");\r\n        }\r\n      } else {\r\n        setMessage('');\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Invalid move caught:\", error);\r\n      return false;\r\n    }\r\n  }, [game]);\r\n\r\n  // Function to start a new game.\r\n  const startNewGame = () => {\r\n    const newGame = new Chess();\r\n    setGame(newGame);\r\n    setPosition(newGame.fen());\r\n    setMessage('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Simple Chess App</h1>\r\n      <Chessboard position={position} onDrop={handleDrop} />\r\n      {message && <p>{message}</p>}\r\n      {game.isGameOver() && (\r\n        <button onClick={startNewGame}>Start New Game</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}