{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paint\\\\Desktop\\\\Chess Game\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { Chess } from 'chess.js'; // Ensure this matches your installed version\nimport Chessboard from './components/Chessboard';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initialize the game using a lazy initializer to avoid re-creating on each render.\n  const [game, setGame] = useState(() => new Chess());\n  // The current board position as a FEN string.\n  const [position, setPosition] = useState(game.fen());\n  // Message to show game status (checkmate, draw, etc.)\n  const [message, setMessage] = useState('');\n\n  // Move handler: called when a piece is dropped.\n  const handleDrop = useCallback((sourceSquare, targetSquare) => {\n    try {\n      // Attempt to make the move.\n      const move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: 'q' // Always promote to queen for simplicity.\n      });\n\n      // If the move is illegal, return false to cancel the drop.\n      if (move === null) return false;\n\n      // Update the board position.\n      setPosition(game.fen());\n\n      // Check if the game is over.\n      if (game.game_over()) {\n        if (game.in_checkmate()) {\n          setMessage(\"Checkmate! Game over.\");\n        } else if (game.in_draw()) {\n          setMessage(\"Draw! Game over.\");\n        } else {\n          setMessage(\"Game over.\");\n        }\n      } else {\n        // Clear any message if the game is still active.\n        setMessage('');\n      }\n      return true;\n    } catch (error) {\n      console.error(\"Error in handleDrop:\", error);\n      return false;\n    }\n  }, [game]);\n\n  // Function to start a new game.\n  const startNewGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setPosition(newGame.fen());\n    setMessage('');\n  };\n  console.log(\"Rendering App, current FEN:\", position);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple Chess App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: position,\n      onDrop: handleDrop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), game.game_over() && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startNewGame,\n      children: \"Start New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"2QIP1jatXSNfhauGXXdgtLtReMk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useCallback","Chess","Chessboard","jsxDEV","_jsxDEV","App","_s","game","setGame","position","setPosition","fen","message","setMessage","handleDrop","sourceSquare","targetSquare","move","from","to","promotion","game_over","in_checkmate","in_draw","error","console","startNewGame","newGame","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/paint/Desktop/Chess Game/frontend/src/App.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { Chess } from 'chess.js'; // Ensure this matches your installed version\r\nimport Chessboard from './components/Chessboard';\r\nimport './index.css';\r\n\r\nfunction App() {\r\n  // Initialize the game using a lazy initializer to avoid re-creating on each render.\r\n  const [game, setGame] = useState(() => new Chess());\r\n  // The current board position as a FEN string.\r\n  const [position, setPosition] = useState(game.fen());\r\n  // Message to show game status (checkmate, draw, etc.)\r\n  const [message, setMessage] = useState('');\r\n\r\n  // Move handler: called when a piece is dropped.\r\n  const handleDrop = useCallback((sourceSquare, targetSquare) => {\r\n    try {\r\n      // Attempt to make the move.\r\n      const move = game.move({\r\n        from: sourceSquare,\r\n        to: targetSquare,\r\n        promotion: 'q'  // Always promote to queen for simplicity.\r\n      });\r\n\r\n      // If the move is illegal, return false to cancel the drop.\r\n      if (move === null) return false;\r\n\r\n      // Update the board position.\r\n      setPosition(game.fen());\r\n\r\n      // Check if the game is over.\r\n      if (game.game_over()) {\r\n        if (game.in_checkmate()) {\r\n          setMessage(\"Checkmate! Game over.\");\r\n        } else if (game.in_draw()) {\r\n          setMessage(\"Draw! Game over.\");\r\n        } else {\r\n          setMessage(\"Game over.\");\r\n        }\r\n      } else {\r\n        // Clear any message if the game is still active.\r\n        setMessage('');\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      console.error(\"Error in handleDrop:\", error);\r\n      return false;\r\n    }\r\n  }, [game]);\r\n\r\n  // Function to start a new game.\r\n  const startNewGame = () => {\r\n    const newGame = new Chess();\r\n    setGame(newGame);\r\n    setPosition(newGame.fen());\r\n    setMessage('');\r\n  };\r\n\r\n  console.log(\"Rendering App, current FEN:\", position);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Simple Chess App</h1>\r\n      <Chessboard position={position} onDrop={handleDrop} />\r\n      {message && <p>{message}</p>}\r\n      {game.game_over() && (\r\n        <button onClick={startNewGame}>Start New Game</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}